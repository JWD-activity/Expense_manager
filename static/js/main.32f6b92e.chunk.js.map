{"version":3,"sources":["Components/NewExpense/ExpenseForm.js","Components/NewExpense/NewExpense.js","Components/Expense/ExpenseFilter.js","Components/Expense/ExpenseDate.js","Components/Expense/ExpenseItem.js","Components/Expense/ExpenseList.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expense/ExpenseChart.js","Components/Expense/Expense.js","UI/Card.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTilte","setEnteredTilte","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","className","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","value","type","onChange","target","min","step","vlaue","max","onClick","onCancel","NewExpense","startEditing","setStartEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpenseFilter","selected","onChangeFilter","ExpenseDate","day","toLocaleString","month","year","getFullYear","ExpenseItem","ExpenseList","items","length","map","item","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpenseChart","chartDataPoints","expenses","expense","getMonth","Expense","filteredYear","setFilteredYear","filteredExpense","filter","selectedYear","Card","classes","children","INIT_EXPENSES","App","setExpenses","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"uZAiFeA,MA9Ef,SAAqBC,GACnB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KA4BA,OACE,qBAAKC,UAAU,YAAf,SACE,sBAAMA,UAAU,OAAOC,SAhBL,SAACC,GACrBA,EAAMC,iBACN,IAAMC,EAAc,CAClBC,MAAOX,EACPY,QAASV,EACTW,KAAM,IAAIC,KAAKV,IAGjBN,EAAMiB,kBAAkBL,GACxBT,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAKb,SACE,sBAAKC,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBACEU,MAAOhB,EACPiB,KAAK,OACLC,SAnCe,SAACV,GAC1BP,EAAgBO,EAAMW,OAAOH,aAsCvB,sBAAKV,UAAU,uBAAf,UACE,2CACA,uBACEW,KAAK,SACLD,MAAOd,EACPgB,SAxCgB,SAACV,GAC3BL,EAAiBK,EAAMW,OAAOH,QAwCpBI,IAAI,OACJC,KAAK,YAIT,sBAAKf,UAAU,uBAAf,UACE,yCACA,uBACEW,KAAK,OACLC,SA9Cc,SAACV,GACzBH,EAAeG,EAAMW,OAAOH,QA8ClBM,MAAOlB,EACPgB,IAAI,aACJG,IAAI,kBAIR,sBAAKjB,UAAU,uBAAf,UACE,wBAAQW,KAAK,SAASO,QAAS1B,EAAM2B,SAArC,oBAGA,wBAAQR,KAAK,SAAb,+BCnCGS,MAnCf,SAAoB5B,GAClB,MAAwCC,oBAAS,GAAjD,mBAAO4B,EAAP,KAAqBC,EAArB,KAmBA,OACE,sBAAKtB,UAAU,cAAf,WACIqB,GACA,wBAAQH,QAXc,WAC1BI,GAAgB,IAUZ,6BAEDD,GACC,cAAC,EAAD,CACEZ,kBAxBuB,SAACc,GAC9B,IAAMnB,EAAW,2BACZmB,GADY,IAEfC,GAAIC,KAAKC,SAASC,aAEpBnC,EAAMoC,aAAaxB,GACnBkB,GAAgB,IAmBVH,SAZmB,WACzBG,GAAgB,U,YCGLO,MApBf,SAAuBrC,GAKrB,OACE,qBAAKQ,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQU,MAAOlB,EAAMsC,SAAUlB,SART,SAACV,GAC3BV,EAAMuC,eAAe7B,EAAMW,OAAOH,QAO9B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,2B,kBCCKsB,MAdf,SAAqBxC,GACnB,IAAMyC,EAAMzC,EAAMe,KAAK2B,eAAe,QAAS,CAAED,IAAK,YAChDE,EAAQ3C,EAAMe,KAAK2B,eAAe,QAAS,CAAEC,MAAO,SACpDC,EAAO5C,EAAMe,KAAK8B,cAExB,OACE,sBAAKrC,UAAU,eAAf,UACE,qBAAKA,UAAU,oBAAf,SAAoCiC,IACpC,qBAAKjC,UAAU,sBAAf,SAAsCmC,IACtC,qBAAKnC,UAAU,qBAAf,SAAqCoC,QCI5BE,MAZf,SAAqB9C,GACnB,OACE,qBAAIQ,UAAU,eAAd,UACE,cAAC,EAAD,CAAaO,KAAMf,EAAMe,OACzB,sBAAKP,UAAU,4BAAf,UACE,4BAAIR,EAAMa,QACV,sBAAKL,UAAU,sBAAf,eAAwCR,EAAMc,iBCYvCiC,MAlBf,SAAqB/C,GACnB,OAA2B,IAAvBA,EAAMgD,MAAMC,OACP,oBAAIzC,UAAU,0BAAd,gCAGP,oBAAIA,UAAU,gBAAd,SACGR,EAAMgD,MAAME,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEtC,MAAOsC,EAAKtC,MACZC,OAAQqC,EAAKrC,OACbC,KAAMoC,EAAKpC,MAHNoC,EAAKnB,U,mBCULoB,MAnBf,SAAkBpD,GAChB,IAAIqD,EAAgB,KAKpB,OAJIrD,EAAMsD,SAAW,IACnBD,EAAgBpB,KAAKsB,MAAOvD,EAAMkB,MAAQlB,EAAMsD,SAAY,KAAO,KAInE,sBAAK9C,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACVgD,MAAO,CAAEC,OAAQJ,OAGrB,qBAAK7C,UAAU,mBAAf,SAAmCR,EAAM0D,YCOhCC,MApBf,SAAe3D,GACb,IAAM4D,EAAkB5D,EAAM6D,WAAWX,KAAI,SAACY,GAAD,OAAeA,EAAU5C,SAChE6C,EAAe9B,KAAKR,IAAL,MAAAQ,KAAI,YAAQ2B,IAEjC,OACE,qBAAKpD,UAAU,kBAAf,SACE,qBAAKA,UAAU,QAAf,SACGR,EAAM6D,WAAWX,KAAI,SAACY,GAAD,OACpB,cAAC,EAAD,CAEE5C,MAAO4C,EAAU5C,MACjBoC,SAAUS,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,eCcZM,MAxBf,SAAsBhE,GACpB,IAD2B,EACrBiE,EAAkB,CACtB,CAAEP,MAAO,MAAOxC,MAAO,GACvB,CAAEwC,MAAO,MAAOxC,MAAO,GACvB,CAAEwC,MAAO,MAAOxC,MAAO,GACvB,CAAEwC,MAAO,MAAOxC,MAAO,GACvB,CAAEwC,MAAO,MAAOxC,MAAO,GACvB,CAAEwC,MAAO,MAAOxC,MAAO,GACvB,CAAEwC,MAAO,MAAOxC,MAAO,GACvB,CAAEwC,MAAO,MAAOxC,MAAO,GACvB,CAAEwC,MAAO,MAAOxC,MAAO,GACvB,CAAEwC,MAAO,MAAOxC,MAAO,GACvB,CAAEwC,MAAO,MAAOxC,MAAO,GACvB,CAAEwC,MAAO,MAAOxC,MAAO,IAbE,cAgBLlB,EAAMkE,UAhBD,IAgB3B,2BAAsC,CAAC,IAA5BC,EAA2B,QAEpCF,EADqBE,EAAQpD,KAAKqD,YACJlD,OAASiD,EAAQrD,QAlBtB,8BAqB3B,OAAO,cAAC,EAAD,CAAO+C,WAAYI,KCKbI,MAvBf,SAAiBrE,GACf,MAAwCC,mBAAS,QAAjD,mBAAOqE,EAAP,KAAqBC,EAArB,KAMMC,EAAkBxE,EAAMgD,MAAMyB,QAAO,SAACN,GAC1C,OAAOA,EAAQpD,KAAK8B,cAAcV,aAAemC,KAGnD,OACE,gCACE,cAAC,EAAD,CACEhC,SAAUgC,EACV/B,eAZsB,SAACmC,GAC3BH,EAAgBG,MAad,cAAC,EAAD,CAAcR,SAAUM,IACxB,cAAC,EAAD,CAAaxB,MAAOwB,Q,MChBXG,MALf,SAAc3E,GACZ,IAAM4E,EAAU,QAAU5E,EAAMQ,UAChC,OAAO,qBAAKA,UAAWoE,EAAhB,SAA0B5E,EAAM6E,YCCnCC,EAAgB,CACpB,CACE9C,GAAI,KACJnB,MAAO,eACPC,OAAQ,MACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CAAEgB,GAAI,KAAMnB,MAAO,SAAUC,OAAQ,OAAQC,KAAM,IAAIC,KAAK,KAAM,EAAG,KACrE,CACEgB,GAAI,KACJnB,MAAO,gBACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEgB,GAAI,KACJnB,MAAO,oBACPC,OAAQ,IACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,MAwBb+D,MApBf,WACE,MAAgC9E,mBAAS6E,GAAzC,mBAAOZ,EAAP,KAAiBc,EAAjB,KAMA,OACE,+BACE,sBAAKxE,UAAU,iBAAf,UACE,oBAAIA,UAAU,UAAd,6BACA,eAAC,EAAD,CAAMA,UAAU,WAAhB,UACE,cAAC,EAAD,CAAY4B,aATM,SAAC+B,GACzBa,GAAY,SAACC,GAAD,OAAkBd,GAAlB,mBAA8Bc,UASpC,cAAC,EAAD,CAASjC,MAAOkB,a,MCpC1BgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.32f6b92e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nfunction ExpenseForm(props) {\r\n  const [enteredTilte, setEnteredTilte] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTilte(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTilte,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTilte('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <form className='form' onSubmit={submitHandler}>\r\n        <div className='new-expense__controls'>\r\n          <div className='new-expense__control'>\r\n            <label>Title</label>\r\n            <input\r\n              value={enteredTilte}\r\n              type='text'\r\n              onChange={titleChangeHandler}\r\n            />\r\n          </div>\r\n\r\n          <div className='new-expense__control'>\r\n            <label>Amount</label>\r\n            <input\r\n              type='number'\r\n              value={enteredAmount}\r\n              onChange={amountChangeHandler}\r\n              min='0.01'\r\n              step='0.01'\r\n            />\r\n          </div>\r\n\r\n          <div className='new-expense__control'>\r\n            <label>Date</label>\r\n            <input\r\n              type='date'\r\n              onChange={dateChangeHandler}\r\n              vlaue={enteredDate}\r\n              min='01-01-2018'\r\n              max='31-12-2023'\r\n            />\r\n          </div>\r\n\r\n          <div className='new-expense__actions'>\r\n            <button type='button' onClick={props.onCancel}>\r\n              Cancel\r\n            </button>\r\n            <button type='submit'>Submit</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nfunction NewExpense(props) {\r\n  const [startEditing, setStartEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setStartEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setStartEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setStartEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      {!startEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {startEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import React from 'react';\r\nimport './ExpenseFilter.css';\r\n\r\nfunction ExpenseFilter(props) {\r\n  const selectChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter By Year</label>\r\n        <select value={props.selected} onChange={selectChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseFilter;\r\n","import React from 'react';\r\nimport './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n  const day = props.date.toLocaleString('en-GB', { day: '2-digit' });\r\n  const month = props.date.toLocaleString('en-GB', { month: 'long' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__day'>{day}</div>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from 'react';\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <li className='expense-item'>\r\n      <ExpenseDate date={props.date} />\r\n      <div className='expense-item__description'>\r\n        <p>{props.title}</p>\r\n        <div className='expense-item__price'>$ {props.amount}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\nimport './ExpenseList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nfunction ExpenseList(props) {\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>No expenses found.</h2>;\r\n  }\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map((item) => (\r\n        <ExpenseItem\r\n          key={item.id}\r\n          title={item.title}\r\n          amount={item.amount}\r\n          date={item.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ExpenseList;\r\n","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nfunction ChartBar(props) {\r\n  let barFillHeight = '0%';\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartBar;\r\n","import React from 'react';\r\nimport './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nfunction Chart(props) {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart-container'>\r\n      <div className='chart'>\r\n        {props.dataPoints.map((dataPoint) => (\r\n          <ChartBar\r\n            key={dataPoint.label}\r\n            value={dataPoint.value}\r\n            maxValue={totalMaximum}\r\n            label={dataPoint.label}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nfunction ExpenseChart(props) {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n}\r\n\r\nexport default ExpenseChart;\r\n","import React, { useState } from 'react';\r\nimport './Expense.css';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport ExpenseList from './ExpenseList';\r\nimport ExpenseChart from './ExpenseChart';\r\n\r\nfunction Expense(props) {\r\n  const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpense = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ExpenseFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpenseChart expenses={filteredExpense} />\r\n      <ExpenseList items={filteredExpense} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expense;\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nfunction Card(props) {\r\n  const classes = 'card ' + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import './App.css';\nimport React, { useState } from 'react';\nimport NewExpense from './Components/NewExpense/NewExpense';\nimport Expense from './Components/Expense/Expense';\nimport Card from './UI/Card';\n\nconst INIT_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(INIT_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpense) => [expense, ...prevExpense]);\n  };\n\n  return (\n    <main>\n      <div className='container-main'>\n        <h2 className='heading'>Expense Manager</h2>\n        <Card className='expenses'>\n          <NewExpense onAddExpense={addExpenseHandler} />\n          <Expense items={expenses} />\n        </Card>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}